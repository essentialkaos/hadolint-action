name: "EK Hadolint"
description: "Action for checking dockerfiles with Hadolint"
author: "ESSENTIALKAOS"

branding:
  icon: 'life-buoy'
  color: 'white'

inputs:
  files:
    description: "List of dockerfiles to check"
    required: true

  version:
    description: "Version of Hadolint"
    required: false
    default: "2.12.0"

  format:
    description: "The output format for the results (tty/json/checkstyle/codeclimate/gitlab_codeclimate/codacy/sonarqube)"
    required: false

  verbose:
    description: "Enable verbose logging"
    required: false

  strict-labels:
    description: "Do not permit labels other than specified in label-schema"
    required: false

  failure-threshold:
    description: "Exit with failure code only when rules with a severity equal to or above given (error/warning/info/style/ignore/none)"
    required: false

  trusted-registry:
    description: "A docker registry to allow to appear in FROM instructions"
    required: false

runs:
  using: "composite"
  steps:
    - id: hadolint-bin-cache
      name: Cache Hadolint binary
      uses: actions/cache@v3
      with:
        path: ~/.cache/hadolint
        key: ${{runner.os}}-ek-hadolint-action-v${{inputs.version}}

    - id: hadolint-install
      name: Install Hadolint
      if: steps.hadolint-bin-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        # [hadolint-install]

        echo -e "::group::\033[34mDownloading Hadolint…\033[0m"

        mkdir -p ~/.cache
        hl_url="https://github.com/hadolint/hadolint/releases/download/"

        if [[ "$RUNNER_OS" == "Linux" ]] ; then
          wget -O ~/.cache/hadolint "${hl_url}/v${{inputs.version}}/hadolint-Linux-x86_64" 2>&1
        elif [[ "$RUNNER_OS" == "macOS" ]] ; then
          wget -O ~/.cache/hadolint "${hl_url}/v${{inputs.version}}/hadolint-Darwin-x86_64" 2>&1
        else
          echo "::endgroup::"
          echo "$RUNNER_OS is not supported"
          exit 1  
        fi

        chmod +x ~/.cache/hadolint

        echo "::endgroup::"

    - id: hadolint-set-options
      name: Set Hadolint options
      shell: bash
      run : |
        # [hadolint-set-options]

        declare -a options

        if [[ -n "${{inputs.format}}" ]] ; then
          options+=("-f ${{inputs.format}}")
        fi

        if [[ -n "${{inputs.verbose}}" ]] ; then
          options+=("-V")
        fi

        if [[ -n "${{inputs.trusted-registry}}" ]] ; then
          options+=("--trusted-registry ${{inputs.trusted-registry}}")
        fi

        if [[ -n "${{inputs.strict-labels}}" ]] ; then
          options+=("--strict-labels")
        fi

        if [[ -n "${{inputs.severity}}" ]] ; then
          options+=("--failure-threshold ${{inputs.severity}}")
        fi

        echo -e "::group::\033[34mHadolint configuration…\033[0m"
        if [[ ${#options[@]} -eq 0 ]] ; then
          echo "Options: -no-set-"
        else
          echo "Options: ${options[@]}"
        fi
        echo "::endgroup::"

        echo "options=${options[@]}" >> $GITHUB_OUTPUT

    - id: hadolint-version-print
      name: Print Hadolint version info
      shell: bash
      run: |
        # [hadolint-version-print]

        echo -e "::group::\033[34mPrint Hadolint version…\033[0m"
        ~/.cache/hadolint --version
        echo "::endgroup::"

    - id: hadolint-check
      name: Check dockerfiles with Hadolint
      shell: bash
      run: |
        # [hadolint-check]

        echo -e "\033[34mRunning Hadolint…\033[0m"
        ~/.cache/hadolint ${{steps.hadolint-set-options.outputs.options}} ${{inputs.files}} && echo "Everything is OK!"
